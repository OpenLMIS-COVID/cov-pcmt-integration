#%RAML 0.8
---
title: OpenLMIS PCMT Integration API
version: "@version@"
baseUri: "@baseUrl@"
protocols: [ HTTP, HTTPS ]

documentation:
  - title: Getting Started
    content: Welcome to the OpenLMIS PCMT Integration Service documentation.

schemas:
  - auditLogEntry: !include schemas/auditLogEntry.json

  - auditLogEntryArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/auditLogEntry.json" }
      }


  - localizedErrorResponse: !include schemas/localizedErrorResponse.json

  - version: !include schemas/version.json

  - manualIntegrationExecution: !include schemas/manualIntegrationExecution.json
  - integrationExecutionPage: !include schemas/integrationExecutionPage.json
  - integrationExecution: !include schemas/integrationExecution.json

  - integrationExecutionQueueItem: !include schemas/integrationExecutionQueueItem.json
  - integrationExecutionQueue: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "integrationExecutionQueueItem" }
      }

  - integrationSchedule: !include schemas/integrationSchedule.json
  - integrationSchedulePage: !include schemas/integrationSchedulePage.json

traits:
  - secured:
      queryParameters:
        access_token:
          displayName: access_token
          description: OAuth2 access token
          type: string
          required: false
          repeat: false
      headers:
        Authorization:
          displayName: Authorization
          description: OAuth2 authorization token header. Takes the form of 'Bearer <token>'.
          type: string
          required: false
          repeat: false

  - paginated:
      queryParameters:
        page:
          description: The page number which should be displayed. Note that the first page is numbered zero rather than one. Additionally, negative and undefined values are interpreted as zero.
          type: integer
          required: false
          repeat: false
        size:
          description: The desired size of each page. This specifies the maximum number of values that should be returned by the server. Zero, undefined, and negative values should result in all possible values being returned.
          type: integer
          required: false
          repeat: false
  - sorted:
      queryParameters:
        sort:
          description: Sorting criteria in the format "property(,asc|desc)". Default sort order is ascending. Multiple sort criteria are supported.
          type: string
          required: false
          repeat: true
resourceTypes:
  - auditLog:
      description: This represents the audit log for all <<resourcePathName|!singularize>> resources.
      get:
        description: Returns all or part of the resource's audit log
        # Although /auditLog endpoints support "page" and "number" query parameters for pagination,
        # they donâ€™t return the response body and set of pagination-related values expected to be
        # returned for core domain resources.
        is: [ paginated ]
        queryParameters:
          author:
            displayName: author
            description: Name of the author of changes which should be returned. By default, all changes are returned regardless of author.
            type: string
            required: false
            repeat: false
          changedPropertyName:
            displayName: changedPropertyName
            description: The name of the property about which changes should be returned. If null or empty, changes associated with any and all properties are returned.
            type: string
            required: false
            repeat: false
        responses:
          200:
            body:
              application/json:
                schema: auditLogEntryArray
                example: |
                  [
                    {
                      "changeType": "ValueChange",
                      "globalId": {
                        "entity": "org.openlmis.SomeClass",
                        "cdoId": 1
                      },
                      "commitMetadata": {
                        "author": "SomeUserName",
                        "properties": [],
                        "commitDate": "2016-12-17T19:39:57.621",
                        "id": 3
                      },
                      "property": "PropertyName",
                      "left": "OldValue",
                      "right": "NewValue"
                    }
                  ]
          404:
            description: The specified <<resourcePathName|!singularize>> does not exist.
            body:
              application/json:
                schema: localizedErrorResponse
          401:
            body:
              application/json:

  - instanceAuditLog:
      description: This represents the audit log for a specified instance of the <<resourcePathName|!singularize>> resource.
      type: auditLog
      uriParameters:
        id:
          type: string
          required: true
          repeat: false
/pcmtintegration:
  displayName: Version
  get:
    description: Get version
    responses:
      200:
        description: Returns version information.
        headers:
        body:
          application/json:
            schema: version

/api:
  /integrationExecutions:
    displayName: integrationExecutions
    get:
      is: [ secured, paginated, sorted ]
      description: Get all integration executions that match the given parameters.
      responses:
        200:
          body:
            application/json:
              schema: integrationExecutionPage
        401:
          body:
            application/json:
        403:
          body:
            application/json:
              schema: localizedErrorResponse
    post:
      is: [ secured ]
      description: Start migration.
      body:
        application/json:
          schema: manualIntegrationExecution
      responses:
        202:
        401:
          body:
            application/json:
        403:
          body:
            application/json:
              schema: localizedErrorResponse
    /{id}:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: Get chosen execution.
        responses:
          200:
            body:
              application/json:
                schema: integrationExecution
          404:
            body:
              application/json:
                schema: localizedErrorResponse
          401:
            body:
              application/json:
          403:
            body:
              application/json:
                schema: localizedErrorResponse
      /request:
        get:
          is: [ secured ]
          description: Get execution request.
          responses:
            200:
              body:
                application/json:
            404:
              body:
                application/json:
                  schema: localizedErrorResponse
            401:
              body:
                application/json:
            403:
              body:
                application/json:
                  schema: localizedErrorResponse
  /integrationExecutionQueue:
    get:
      is: [ secured ]
      description: Get executions from the execution queue.
      responses:
        200:
          body:
            application/json:
              schema: integrationExecutionQueue
        401:
          body:
            application/json:
        403:
          body:
            application/json:
              schema: localizedErrorResponse

  /integrationSchedules:
    displayName: integrationSchedules
    get:
      is: [ secured, paginated, sorted ]
      description: Get all schedules settings.
      responses:
        200:
          body:
            application/json:
              schema: integrationSchedulePage
        401:
          body:
            application/json:
        403:
          body:
            application/json:
              schema: localizedErrorResponse
    post:
      is: [ secured ]
      description: Create a schedule.
      body:
        application/json:
          schema: integrationSchedule
      responses:
        201:
          body:
            application/json:
              schema: integrationSchedule
        400:
          body:
            application/json:
              schema: localizedErrorResponse
        401:
          body:
            application/json:
        403:
          body:
            application/json:
              schema: localizedErrorResponse
    /{id}:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      get:
        is: [ secured ]
        description: Get schedule.
        responses:
          200:
            body:
              application/json:
                schema: integrationSchedule
          404:
            body:
              application/json:
                schema: localizedErrorResponse
          401:
            body:
              application/json:
          403:
            body:
              application/json:
                schema: localizedErrorResponse
      put:
        is: [ secured ]
        description: Change Schedule.
        body:
          application/json:
            schema: integrationSchedule
        responses:
          200:
            body:
              application/json:
                schema: integrationSchedule
          400:
            body:
              application/json:
                schema: localizedErrorResponse
          401:
            body:
              application/json:
          403:
            body:
              application/json:
                schema: localizedErrorResponse
      delete:
        is: [ secured ]
        description: "[AVOID USING] Completely removes Schedule. This action is not
        recoverable."
        responses:
          204:
          404:
            body:
              application/json:
                schema: localizedErrorResponse
          401:
            body:
              application/json:

flyway.locations=classpath:db/migration
flyway.schemas=dhis2integration
flyway.sql-migration-prefix=
flyway.placeholder-prefix=#[
flyway.placeholder-suffix=]

spring.datasource.url=${DATABASE_URL}?stringtype=unspecified
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jackson.deserialization.ACCEPT_FLOAT_AS_INT=false
spring.jackson.serialization.INDENT_OUTPUT=true
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false

spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.hibernate.naming.physical-strategy=org.openlmis.integration.pcmt.domain.CustomPhysicalNamingStrategy
spring.jpa.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.default_schema=dhis2integration
spring.jpa.show-sql=false

server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
server.compression.min-response-size=1024

defaultLocale=${LOCALE:en}

time.zoneId=${TIME_ZONE_ID:UTC}

currencyCode=${CURRENCY_CODE:USD}
currencySymbol=${CURRENCY_SYMBOL:$}
currencySymbolSide=${CURRENCY_SYMBOL_SIDE:left}
currencyDecimalPlaces=${CURRENCY_DECIMAL_PLACES:2}

groupingSeparator=${GROUPING_SEPARATOR:,}
groupingSize=${GROUPING_SIZE:3}

decimalSeparator=${DECIMAL_SEPARATOR:.}

dateFormat=${DATE_FORMAT:dd/MM/yyyy}
dateTimeFormat=${DATE_TIME_FORMAT:dd/MM/yyyy HH:mm:ss}

service.url=${BASE_URL}
referencedata.url=${BASE_URL}
pcmt.url=${PCMT_URL}

fhir.url=${BASE_URL}/hapifhir
fhir.logging.enable=true
fhir.logging.verbose=false

auth.server.olmisAuthorizationUrl=${BASE_URL}/api/oauth/token
auth.server.olmisUrl=${BASE_URL}/api/oauth/check_token
auth.server.olmisClientId=trusted-client
auth.server.olmisClientId.apiKey.prefix=api-key-client-
auth.server.olmisClientSecret=secret
auth.olmisResourceId=dhis2integration

auth.server.pcmtAuthorizationUrl=${PCMT_URL}/api/oauth/v1/token
auth.server.pcmtUrl=${PCMT_URL}/api/oauth/check_token
auth.server.pcmtClientId=${PCMT_CLIENTID}
auth.server.pcmtClientSecret=${PCMT_SECRET}
auth.pcmtResourceId=pcmtintegration


cors.allowedOrigins=${CORS_ALLOWED_ORIGINS:}
cors.allowedMethods=${CORS_ALLOWED_METHODS:}

spring.data.rest.maxPageSize=2147483647

#why 2000 ? Check https://stackoverflow.com/a/417184
request.maxUrlLength=2000

# pcmt configuration
pcmt.measure.mapping.stock_on_hand=a
pcmt.measure.mapping.total_consumed_quantity=b
pcmt.measure.mapping.total_received_quantity=c
pcmt.measure.mapping.total_stock_out_days=d
dhispcmtsureReport.group.programNameCodeText=programName
dhis2pcmtureReport.group.measureScoreSystem=openlmisProgramName

pcmt.postPayloadTaskExecutor.corePoolSize=1
pcmt.postPayloadTaskExecutor.maxPoolSize=1
pcmt.postPayloadTaskExecutor.keepAliveSeconds=60
pcmt.postPayloadTaskExecutor.queueCapacity=100
pcmt.postPayloadTaskExecutor.allowCoreThreadTimeOut=false

# pcmt auto send data
pcmt.enableAutoSend=${PCMT_INTEGRATION_ENABLED:true}
